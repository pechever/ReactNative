import React, { useState } from 'react';
import { View, Text, TextInput, Button, FlatList, StyleSheet, TouchableOpacity, Alert } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';

// Color variables
const COLORS = {
  primaryBackground: '#F5F5F5',
  buttonBackground: '#007AFF',
  buttonText: '#FFFFFF',
  textPrimary: '#000000',
  inputBackground: '#FFFFFF',
  inputBorder: '#CCCCCC',
  cartItemBackground: '#FFFFFF',
  cartItemText: '#333333',
  headerBackground: '#007AFF',
  headerText: '#FFFFFF',
};

// Sample product data
const SAMPLE_PRODUCTS = [
  { id: '1', code: 'P001', description: 'Laptop Pro', price: 999.99 },
  { id: '2', code: 'P002', description: 'Smartphone X', price: 599.99 },
  { id: '3', code: 'P003', description: 'Wireless Headphones', price: 199.99 },
];

// Create stack navigator
const Stack = createStackNavigator();

// Login Screen Component
function LoginScreen({ navigation }) {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = () => {
    if (username && password) {
      navigation.navigate('Cart');
    } else {
      Alert.alert('Error', 'Please enter both username and password');
    }
  };

  return (
    <View style={styles.loginContainer}>
      <View style={styles.loginForm}>
        <Text style={styles.loginTitle}>Login</Text>
        <TextInput
          style={styles.input}
          placeholder="Username"
          value={username}
          onChangeText={setUsername}
        />
        <TextInput
          style={styles.input}
          placeholder="Password"
          value={password}
          onChangeText={setPassword}
          secureTextEntry
        />
        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>
          <Text style={styles.loginButtonText}>Sign In</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
}

// Cart Screen Component
function CartScreen() {
  const [cart, setCart] = useState([]);

  const addToCart = (product) => {
    setCart([...cart, product]);
  };

  const placeOrder = () => {
    if (cart.length > 0) {
      Alert.alert('Success', 'Order placed successfully!');
      setCart([]);
    } else {
      Alert.alert('Error', 'Cart is empty');
    }
  };

  const renderProductItem = ({ item }) => (
    <View style={styles.cartItem}>
      <Text style={styles.cartItemText}>Code: {item.code}</Text>
      <Text style={styles.cartItemText}>{item.description}</Text>
      <Text style={styles.cartItemText}>${item.price.toFixed(2)}</Text>
      <TouchableOpacity
        style={styles.addButton}
        onPress={() => addToCart(item)}
      >
        <Text style={styles.addButtonText}>Add to Cart</Text>
      </TouchableOpacity>
    </View>
  );

  const renderCartItem = ({ item }) => (
    <View style={styles.cartItem}>
      <Text style={styles.cartItemText}>{item.description} - ${item.price.toFixed(2)}</Text>
    </View>
  );

  return (
    <View style={styles.cartContainer}>
      <Text style={styles.sectionTitle}>Products</Text>
      <FlatList
        data={SAMPLE_PRODUCTS}
        renderItem={renderProductItem}
        keyExtractor={(item) => item.id}
        style={styles.productList}
      />
      <Text style={styles.sectionTitle}>Your Cart</Text>
      <FlatList
        data={cart}
        renderItem={renderCartItem}
        keyExtractor={(item, index) => `${item.id}-${index}`}
        style={styles.cartList}
      />
      <TouchableOpacity style={styles.orderButton} onPress={placeOrder}>
        <Text style={styles.orderButtonText}>Place Order</Text>
      </TouchableOpacity>
    </View>
  );
}

// Main App Component
export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator
        initialRouteName="Login"
        screenOptions={{
          headerStyle: { backgroundColor: COLORS.headerBackground },
          headerTintColor: COLORS.headerText,
        }}
      >
        <Stack.Screen name="Login" component={LoginScreen} />
        <Stack.Screen name="Cart" component={CartScreen} options={{ title: 'Shopping Cart' }} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

// Styles
const styles = StyleSheet.create({
  loginContainer: {
    flex: 1,
    justifyContent: 'flex-end',
    backgroundColor: COLORS.primaryBackground,
    padding: 20,
  },
  loginForm: {
    backgroundColor: COLORS.inputBackground,
    padding: 20,
    borderRadius: 10,
    marginBottom: 20,
  },
  loginTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: COLORS.textPrimary,
    textAlign: 'center',
  },
  input: {
    height: 40,
    borderColor: COLORS.inputBorder,
    borderWidth: 1,
    marginBottom: 15,
    paddingHorizontal: 10,
    borderRadius: 5,
    color: COLORS.textPrimary,
  },
  loginButton: {
    backgroundColor: COLORS.buttonBackground,
    padding: 10,
    borderRadius: 5,
    alignItems: 'center',
  },
  loginButtonText: {
    color: COLORS.buttonText,
    fontSize: 16,
    fontWeight: 'bold',
  },
  cartContainer: {
    flex: 1,
    backgroundColor: COLORS.primaryBackground,
    padding: 20,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    marginVertical: 10,
    color: COLORS.textPrimary,
  },
  productList: {
    flex: 1,
  },
  cartList: {
    flex: 1,
  },
  cartItem: {
    backgroundColor: COLORS.cartItemBackground,
    padding: 15,
    marginVertical: 5,
    borderRadius: 5,
  },
  cartItemText: {
    fontSize: 16,
    color: COLORS.cartItemText,
  },
  addButton: {
    backgroundColor: COLORS.buttonBackground,
    padding: 10,
    borderRadius: 5,
    marginTop: 10,
    alignItems: 'center',
  },
  addButtonText: {
    color: COLORS.buttonText,
    fontWeight: 'bold',
  },
  orderButton: {
    backgroundColor: COLORS.buttonBackground,
    padding: 15,
    borderRadius: 5,
    alignItems: 'center',
    marginTop: 10,
  },
  orderButtonText: {
    color: COLORS.buttonText,
    fontSize: 16,
    fontWeight: 'bold',
  },
});
